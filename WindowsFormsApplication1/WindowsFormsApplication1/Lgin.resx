<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>